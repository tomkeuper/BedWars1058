name: Create a release + deploy to repo

on:
  push:
    branches: [production]

jobs:
  package:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: 'production'
      - name: Set up JDK 17.0.5
        uses: actions/setup-java@v2
        with:
          java-version: '17.0.5'
          distribution: 'adopt'
      - name: Package with Maven
        run: |
          mvn clean package
      - name: Publish Artifact
        uses: actions/upload-artifact@v3
        with:
          name: bedwars-plugin
          path: bedwars-plugin/target/**.jar
          if-no-files-found: error
      - name: Set next version
        id: bump
        uses: nnichols/maven-version-bump-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  release:
    runs-on: ubuntu-latest
    needs: [ package ]
    env:
      BODY_UNLOCK: |
        {"required_status_checks":null,"enforce_admins":false,"required_pull_request_reviews":null,"restrictions":null,"required_linear_history":false,"allow_force_pushes":false,"allow_deletions":false,"block_creations":false,"required_conversation_resolution":false,"lock_branch":false,"allow_fork_syncing":false}
      BODY_LOCK: |
        {"required_status_checks":null,"enforce_admins":false,"required_pull_request_reviews":null,"restrictions":null,"required_linear_history":false,"allow_force_pushes":false,"allow_deletions":false,"block_creations":false,"required_conversation_resolution":false,"lock_branch":true,"allow_fork_syncing":false}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: 'production'
      - name: Download the artifact
        uses: actions/download-artifact@v3
        with:
          name: bedwars-plugin
          path: target
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          target_commitish: production
          tag_name: ${{ needs.package.outputs.version }}
          generate_release_notes: true
          files: "target/bedwars-*"
  merge-master-back-to-dev:
    timeout-minutes: 2
    runs-on: ubuntu-latest
    needs: [ release ]
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: 'production'
      - name: Unlock Master Branch
        run: |
          curl -L -X PUT -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.ACCESS_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/tomkeuper/BedWars2023/branches/master/protection -d '{"required_status_checks":null,"enforce_admins":false,"required_pull_request_reviews":null,"restrictions":null,"required_linear_history":false,"allow_force_pushes":false,"allow_deletions":false,"block_creations":false,"required_conversation_resolution":false,"lock_branch":false,"allow_fork_syncing":false}'
      - name: Set Git config
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"
      - name: Merge production into master
        run: |
          git fetch --unshallow
          git checkout master
          git pull
          git merge --no-ff production -m "Auto-merge production back to master"
          git push --force
      - name: Lock Master Branch
        run: |
          curl -L -X PUT -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.ACCESS_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/tomkeuper/BedWars2023/branches/master/protection -d '{"required_status_checks":null,"enforce_admins":false,"required_pull_request_reviews":null,"restrictions":null,"required_linear_history":false,"allow_force_pushes":false,"allow_deletions":false,"block_creations":false,"required_conversation_resolution":false,"lock_branch":true,"allow_fork_syncing":false}'
  deploy-package:
    timeout-minutes: 2
    runs-on: ubuntu-latest
    needs: [ merge-master-back-to-dev ]
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: 'api-fixes'
      - name: Set up JDK 17.0.7
        uses: actions/setup-java@v2
        with:
          java-version: '17.0.7'
          distribution: 'adopt'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      - name: Deploy Package
        env:
          REPO_USER: ${{ secrets.REPO_USER }}
          REPO_PASS: ${{ secrets.REPO_PASS }}
        run: mvn --batch-mode -DskipTests clean deploy -s settings.xml