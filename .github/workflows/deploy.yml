name: Create a release + deploy to repo

on:
  push:
    branches: [production, workflow-test]

jobs:
  create-jar:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: 'workflow-test'
      - name: Set up JDK 17.0.7
        uses: actions/setup-java@v4
        with:
          java-version: '17.0.7'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: release-candidate
      - name: Package with Gradle
        run: |
          gradle clean tag shadowJar -Prelease
      - name: Set version
        id: set-version
        run: |
          VERSION=$(gradle printTag | awk '/Generated Tag:/ {print $3}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          cd bedwars-plugin/build/libs/
          ls
      - name: Publish Artifact
        uses: actions/upload-artifact@v4
        with:
          name: bedwars-plugin
          path: bedwars-plugin/build/libs/**.jar
          if-no-files-found: error
  release:
    runs-on: ubuntu-latest
    needs: [ create-jar ]
    permissions:
      contents: write
    steps:
      - name: Download the artifact
        uses: actions/download-artifact@v4
        with:
          name: bedwars-plugin
          path: target
      - name: Print generated tags
        run: |
          echo "Generated Tag: ${{ needs.create-jar.outputs.version }}"
          ls
          cd target/
          ls
      - name: Create release
        id: release
        uses: softprops/action-gh-release@v2
        with:
          target_commitish: workflow-test
          tag_name: ${{ needs.create-jar.outputs.version }}
          generate_release_notes: true
          files: "target/BedWars-*"
  deploy-package:
    timeout-minutes: 2
    runs-on: ubuntu-latest
    needs: [ release ]
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: 'workflow-test'
      - name: Set up JDK 17.0.7
        uses: actions/setup-java@v4
        with:
          java-version: '17.0.7'
          distribution: 'temurin'
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: release-candidate
      - name: Deploy Package
        env:
          REPO_USER: ${{ secrets.REPO_USER }}
          REPO_PASS: ${{ secrets.REPO_PASS }}
        run: gradle clean publish --stacktrace -PdeployUsername="${REPO_USER}" -PdeployPassword="${REPO_PASS}"
  javadoc:
    name: Publish JavaDoc
    runs-on: ubuntu-latest
    needs: deploy-package
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: 'workflow-test'
      - name: Set up JDK 17.0.7
        uses: actions/setup-java@v4
        with:
          java-version: '17.0.7'
          distribution: 'temurin'
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: release-candidate
      - name: Install Packages
        run: gradle clean publishToMavenLocal
      - name: Build JavaDoc
        run: gradle javadoc
      - name: Create key for Deploy
        run: |
          echo "${{ secrets.JDC_PRIVATE_KEY }}" > ./id_rsa
      - name: Deploy JavaDoc ðŸš€
        uses: wangyucode/sftp-upload-action@v2.0.2
        with:
          host: ${{ secrets.JDC_IP_ADDRESS }}
          username: ${{ secrets.JDC_USER }}
          privateKey: './id_rsa'
          localDir: 'bedwars-api/build/docs/javadoc'
          remoteDir: '/var/www/tomkeuper.com/javadocs'
          removeExtraFilesOnServer: true